name: Build & Run Tests

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos]
        config: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true   # fetch fmt and any other submodules

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        run: bash
        with:
          platform: x64

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Configure CMake
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cmake -S . -B build -G "MinGW Makefiles" -A x64 -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          else
            cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          fi

      - name: Build Tests
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cmake --build build --config ${{ matrix.config }} --target Tests
          else
            cmake --build build --target Tests -j$(nproc)
          fi

      - name: Run Tests
        shell: bash
        working-directory: build
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            ctest -C ${{ matrix.config }} -R MyTests --output-on-failure
          else
            ctest -R MyTests --output-on-failure
          fi
