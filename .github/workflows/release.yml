name: Release

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
    
    strategy:
      fail-fast: false
      
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest -R Tests --output-on-failure

    - name: Prepare release files
      run: |
        mkdir -p $GITHUB_WORKSPACE/res
        cp -r ./build/bin/*DSL* $GITHUB_WORKSPACE/res/
        cp -r ./docs/* $GITHUB_WORKSPACE/res/
        cp -r ./LICENSE $GITHUB_WORKSPACE/res/
        cp -r ./README.md $GITHUB_WORKSPACE/res/
        find . -mindepth 1 -maxdepth 1 ! -name 'res' ! -name '.git' -exec rm -rf {} +
        cp -r $GITHUB_WORKSPACE/res/* .

    - name: Commit DSL binaries with version
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

        git checkout -B release-binaries

        # Create version string (YYYYMMDDHHMM)
        VERSION=$(date +'%Y%m%d%H%M')
        echo "Current version: $VERSION"

        git add .
        git commit -m "Add DSL binaries version $VERSION"
        git push origin release-binaries